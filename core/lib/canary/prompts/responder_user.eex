<%
  defmodule Renderer do
    def render_docs([]), do: "<retrieved_documents>\nNo relevant documents found.\n</retrieved_documents>"

    def render_docs(docs) do
      body =
        docs
        |> Enum.map(&render_doc/1)
        |> Enum.join("\n-------\n")

      "<retrieved_documents>\n#{body}\n</retrieved_documents>"
    end

    defp render_doc(%{title: title, content: nil, sections: sections}) when length(sections) > 0 do
      sections_content =
        sections
        |> Enum.map(&render_section/1)
        |> Enum.join("\n")

      "title: #{title}\n\n#{sections_content}"
    end

    defp render_doc(%{title: title, content: content}) do
      "title: #{title}\n\ncontent: #{content}"
    end

    defp render_section(%{title: nil, content: content}), do: "section_content: #{content}"
    defp render_section(%{title: title, content: content}), do: "section_title: #{title}\nsection_content: #{content}"
  end
%>

<%= Renderer.render_docs(@docs) %>

<user_question>
<%= @query %>
</user_question>

<instruction>
Based on the retrieved documents, answer the user's question within 5 sentences. Note that user's question might contains some typos.
Go straight to the point, give answer first, then go through the details. Each sentence should be short, and paragraph should only contain few sentences.

If user is asking for nonsense, or the retrieved documents are not relevant, just transparently say it.
